{"version":3,"file":"app.js","sources":["App.vue","main.js"],"sourcesContent":["<script lang=\"ts\">\r\nimport { useUserStore } from '@/stores'; // 依据项目路径进行调整\r\nimport { login } from '@/api/login/login.ts';\r\nimport { LoginRequest } from \"./types/loginrequest\";\r\nimport { UserInfo } from './types/userinfo';\n\texport default {\r\n\t\tglobalData: {\r\n\t\t\tselected: 0\r\n\t\t},\r\n\t\tonLaunch: function() {\r\n\t\t\tuni.__f__('log','at App.vue:11','App Launch');\r\n\t\t\tconst userStore = useUserStore();\r\n\t\t\tif (!userStore.hasProfile()) {\r\n\t\t\t  this.handleLogin(); // 调用自定义方法\r\n\t\t\t}\r\n\t\t},\r\n\t\tonShow: function() {\r\n\t\t\tuni.__f__('log','at App.vue:18','App Show');\r\n\t\t},\r\n\t\tonHide: function() {\r\n\t\t\tuni.__f__('log','at App.vue:21','App Hide');\r\n\t\t},\r\n\t\t// 新增：自定义方法\r\n\t\t  methods: {\r\n\t\t    // 处理登录逻辑\r\n\t\t    handleLogin() {\r\n\t\t      uni.login({\r\n\t\t        success: (res) => {\r\n\t\t          if (res.errMsg === \"login:ok\") {\r\n\t\t            const code = res.code;\r\n\t\t            // uni.__f__('log','at App.vue:31','获取登录 code:', code);\r\n\t\t\t\t\tconst loginData: LoginRequest = {\r\n\t\t\t\t\t  code // 替换为实际的授权码\r\n\t\t\t\t\t};\r\n\t\t            this.requestUserInfo(loginData); // 调用获取用户信息的方法\r\n\t\t          }\r\n\t\t        },\r\n\t\t        fail: (err) => {\r\n\t\t          uni.__f__('error','at App.vue:39','登录失败:', err);\r\n\t\t        }\r\n\t\t      });\r\n\t\t    },\r\n\t\t   // 使用 code 请求用户信息\r\n\t\t   async requestUserInfo(loginData: LoginRequest) {\r\n\t\t     try {\r\n\t\t       const res = await login(loginData); // 假设 login 接口接收 code\r\n\t\t\t   // uni.__f__('log','at App.vue:47',res);\r\n\t\t       const { token, nickname, avatar } = res.data;\r\n\t\t       \r\n\t\t       // 存储用户信息到 store\r\n\t\t       const userStore = useUserStore();\r\n\t\t   \t\r\n\t\t       userStore.setToken(token);\r\n\t\t\t   // uni.__f__('log','at App.vue:54',userStore.token)\r\n\t\t\t   \r\n\t\t\t   const partialUser: UserInfo = {\r\n\t\t\t   \tnickname,\r\n\t\t\t   \tavatar\r\n\t\t\t   };\r\n\t\t\t   userStore.setProfile(partialUser);\r\n\t\t       \r\n\t\t       // uni.__f__('log','at App.vue:62','用户信息获取成功');\r\n\t\t     } catch (error) {\r\n\t\t       uni.__f__('error','at App.vue:64','获取用户信息失败:', error);\r\n\t\t     }\r\n\t\t   } \r\n\t\t    \r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t/*每个页面公共css */\r\n</style>\r\n\r\n","import App from './App'\nimport pinia from './stores'\n\n// #ifndef VUE3\nimport Vue from 'vue'\nimport './uni.promisify.adaptor'\nVue.config.productionTip = false\nApp.mpType = 'app'\nconst app = new Vue({\n  ...App\n})\napp.use(pinia) // 在 Vue 2 中使用 pinia (可能需要适配)\napp.$mount()\n// #endif\n\n// #ifdef VUE3\nimport { createSSRApp } from 'vue'\nexport function createApp() {\n  const app = createSSRApp(App)\n  app.use(pinia) // 关键：在 Vue 3 中使用 pinia\n  return {\n    app,\n    pinia // 可选：返回 pinia 实例供其他地方使用\n  }\n}\n// #endif"],"names":["uni","useUserStore","login","createSSRApp","App","pinia"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAKC,MAAe,YAAA;AAAA,EACd,YAAY;AAAA,IACX,UAAU;AAAA,EACX;AAAA,EACA,UAAU,WAAW;AAChBA,kBAAAA,MAAA,MAAM,OAAM,iBAAgB,YAAY;AAC5C,UAAM,YAAYC,yBAAAA;AACd,QAAA,CAAC,UAAU,cAAc;AAC3B,WAAK,YAAY;AAAA,IACnB;AAAA,EACD;AAAA,EACA,QAAQ,WAAW;AACdD,kBAAAA,MAAA,MAAM,OAAM,iBAAgB,UAAU;AAAA,EAC3C;AAAA,EACA,QAAQ,WAAW;AACdA,kBAAAA,MAAA,MAAM,OAAM,iBAAgB,UAAU;AAAA,EAC3C;AAAA;AAAA,EAEE,SAAS;AAAA;AAAA,IAEP,cAAc;AACZA,oBAAAA,MAAI,MAAM;AAAA,QACR,SAAS,CAAC,QAAQ;AACZ,cAAA,IAAI,WAAW,YAAY;AAC7B,kBAAM,OAAO,IAAI;AAE1B,kBAAM,YAA0B;AAAA,cAC9B;AAAA;AAAA,YAAA;AAEO,iBAAK,gBAAgB,SAAS;AAAA,UAChC;AAAA,QACF;AAAA,QACA,MAAM,CAAC,QAAQ;AACbA,wBAAA,MAAI,MAAM,SAAQ,iBAAgB,SAAS,GAAG;AAAA,QAChD;AAAA,MAAA,CACD;AAAA,IACH;AAAA;AAAA,IAED,MAAM,gBAAgB,WAAyB;AACzC,UAAA;AACI,cAAA,MAAM,MAAME,sBAAM,SAAS;AAEjC,cAAM,EAAE,OAAO,UAAU,OAAA,IAAW,IAAI;AAGxC,cAAM,YAAYD,yBAAAA;AAElB,kBAAU,SAAS,KAAK;AAG3B,cAAM,cAAwB;AAAA,UAC7B;AAAA,UACA;AAAA,QAAA;AAED,kBAAU,WAAW,WAAW;AAAA,eAGtB,OAAO;AACdD,sBAAA,MAAI,MAAM,SAAQ,iBAAgB,aAAa,KAAK;AAAA,MACtD;AAAA,IACF;AAAA,EAEH;AACD;ACnDM,SAAS,YAAY;AAC1B,QAAM,MAAMG,cAAY,aAACC,SAAG;AAC5B,MAAI,IAAIC,kBAAK;AACb,SAAO;AAAA,IACL;AAAA,IACJ,OAAIA,aAAK;AAAA;AAAA,EACN;AACH;;;"}